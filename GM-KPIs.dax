//MEASURES & Calculated Columns

string_for_drill_through = If(SELECTEDVALUE('BettingHistories'[Provider], 0) == 0, "Most Played Game by Valid Bets", "Most Played " & SELECTEDVALUE('BettingHistories'[Provider]) & " by Valid Bets")

Avg Daily Bet Players = 
DIVIDE(
DISTINCTCOUNT('BettingHistories'[Player ID]),
DISTINCTCOUNT('BettingHistories'[Bet Date])
)

Avg Daily Valid Bet = 
DIVIDE(
SUM('BettingHistories'[Valid Bet]),
DISTINCTCOUNT('BettingHistories'[Bet Date])
)

Avg Valid Bet Per Player = 
DIVIDE(
SUM('BettingHistories'[Valid Bet]),
DISTINCTCOUNT('BettingHistories'[Player ID])
)


current_user = USERNAME()

current_month_bet_players = CALCULATE(DISTINCTCOUNT(BettingHistories[Player ID]), MONTH(BettingHistories[Bet Date]) = MONTH(TODAY()))

last_month_bet_players = CALCULATE(DISTINCTCOUNT(BettingHistories[Player ID]), DATESBETWEEN(BettingHistories[Bet Date], Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1), EOMONTH(TODAY(),-1)))

Activity % = 
DIVIDE(
SUM('PActivity'[Active Login Frequency]),
MAX('PActivity'[RegAgo])
)

Avg Daily Active Login = 
DIVIDE(
COUNTA('PActivity'[LoggedIn Time Interval]),
DISTINCTCOUNT('PActivity'[LogDate])
)


Avg Daily Registration = 
DIVIDE(
DISTINCTCOUNT('PActivity'[Player ID]),
DISTINCTCOUNT('PActivity'[RegDate])
)

current_month_registration = CALCULATE(DISTINCTCOUNT(PActivity[Player ID]),FILTER(ALL(PActivity[RegDate],PActivity[Last Status]),MONTH(PActivity[RegDate])=MONTH(TODAY()) && PActivity[Last Status] = "Last"))

Depositor to Register Ratio = 
DIVIDE(
SUM('PActivity'[Depositors Count]),DISTINCTCOUNT('PActivity'[Player ID])
)

last_month_registration = CALCULATE(DISTINCTCOUNT(PActivity[Player ID]),
DATESBETWEEN(PActivity[RegDate],
Date(YEAR(EDATE(TODAY(),-1)),MONTH(EDATE(TODAY(),-1)),1), 
EOMONTH(TODAY(),-1)))

Avg Revenue Per Player = 
DIVIDE(
SUM('PlayerFinance'[Gross Company Revenue]),
SUM('PActivity'[Depositors Count])
)

Bet to Deposit Ratio = 
DIVIDE(
SUM('PlayerFinance'[Valid Bets]),
SUM('PlayerFinance'[Deposit Amt#])
)

current_month_affiliate = CALCULATE(SUM(PlayerFinance[Affliliate Commission]),FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_deposit = CALCULATE(SUM(PlayerFinance[Deposit Amt#]),FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_hold = CALCULATE(SUM('PlayerFinance'[Deposit Amt#]) - SUM('PlayerFinance'[Withdrawl Amt#]),FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_effective_depositors = CALCULATE( CALCULATE(DISTINCTCOUNT(PlayerFinance[Player ID])), FILTER(PlayerFinance, CALCULATE(SUM(PlayerFinance[Deposit Count]), ALLEXCEPT(PlayerFinance,PlayerFinance[Player ID], PlayerFinance[Exported Date])) > 0), FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_promotion = CALCULATE(SUM(PlayerFinance[Deposit Bonus]) + SUM(PlayerFinance[Other Bonus]) + SUM(PlayerFinance[Referral Bonus]), FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_rebate = CALCULATE(SUM(PlayerFinance[Rebate]),FILTER(PlayerFinance,MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_valid_bets = CALCULATE(SUM(PlayerFinance[Valid Bets]),FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_win_loss = CALCULATE(SUM(PlayerFinance[Win/Loss]),FILTER(PlayerFinance,MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_withdrawal = CALCULATE(SUM(PlayerFinance[Withdrawl Amt#]),FILTER(PlayerFinance,MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_withdrawers = CALCULATE(CALCULATE(DISTINCTCOUNT(PlayerFinance[Player ID])), FILTER(PlayerFinance, CALCULATE(SUM(PlayerFinance[Withdrawl Count]), ALLEXCEPT(PlayerFinance,PlayerFinance[Player ID], PlayerFinance[Exported Date])) > 0), FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

Gross Gaming Revenue = SUM('PlayerFinance'[Valid Bets]) - SUM('PlayerFinance'[Win/Loss])

Hold Amt# = SUM('PlayerFinance'[Deposit Amt#]) - SUM('PlayerFinance'[Withdrawl Amt#])

last before_month_deposit = CALCULATE(SUM(PlayerFinance[Deposit Amt#]),
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-2)),1),
EOMONTH(TODAY(),-2)))

last before_month_hold = CALCULATE(SUM('PlayerFinance'[Deposit Amt#]) - SUM('PlayerFinance'[Withdrawl Amt#]),DATESBETWEEN(PlayerFinance[Exported Date],   
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-2)),1),
EOMONTH(TODAY(),-2)))

last before_month_withdrawal = CALCULATE(SUM(PlayerFinance[Withdrawl Amt#]),
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-2)),1),EOMONTH(TODAY(),-2)))

last_month_affiliate = CALCULATE(SUM(PlayerFinance[Affliliate Commission]),
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1),EOMONTH(TODAY(),-1)))

last_month_deposit = CALCULATE(SUM(PlayerFinance[Deposit Amt#]),
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1), 
EOMONTH(TODAY(),-1)))

last_month_hold = CALCULATE(SUM('PlayerFinance'[Deposit Amt#]) - SUM('PlayerFinance'[Withdrawl Amt#]),DATESBETWEEN(PlayerFinance[Exported Date],Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1),EOMONTH(TODAY(),-1)))

last_month_effective_depositors = CALCULATE(CALCULATE( CALCULATE(DISTINCTCOUNT(PlayerFinance[Player ID])), FILTER(PlayerFinance, CALCULATE(SUM(PlayerFinance[Deposit Count]),ALLEXCEPT(PlayerFinance,PlayerFinance[Player ID], PlayerFinance[Exported Date]))>0)), DATESBETWEEN(PlayerFinance[Exported Date], Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1), EOMONTH(TODAY(),-1)))

last_month_promotion = CALCULATE(SUM(PlayerFinance[Deposit Bonus]) + SUM(PlayerFinance[Other Bonus]) + SUM(PlayerFinance[Referral Bonus]),     
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1),
EOMONTH(TODAY(),-1)))

last_month_rebate = CALCULATE(SUM(PlayerFinance[Rebate]),
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1),
EOMONTH(TODAY(),-1)))

last_month_valid_bets = CALCULATE(SUM(PlayerFinance[Valid Bets]),
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1), EOMONTH(TODAY(),-1)))

last_month_win_loss = CALCULATE(SUM(PlayerFinance[Win/Loss]),DATESBETWEEN(PlayerFinance[Exported Date], Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1),EOMONTH(TODAY(),-1)))

last_month_withdrawal = CALCULATE(SUM(PlayerFinance[Withdrawl Amt#]),
DATESBETWEEN(PlayerFinance[Exported Date],
Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1),
EOMONTH(TODAY(),-1)))

last_month_withdrawers = CALCULATE(CALCULATE(CALCULATE(DISTINCTCOUNT(PlayerFinance[Player ID])),FILTER(PlayerFinance, CALCULATE(SUM(PlayerFinance[Withdrawl Count]),ALLEXCEPT(PlayerFinance,PlayerFinance[Player ID], PlayerFinance[Exported Date]))>0)), DATESBETWEEN(PlayerFinance[Exported Date], Date(YEAR(EDATE(TODAY(),-1)), MONTH(EDATE(TODAY(),-1)),1), EOMONTH(TODAY(),-1)))

Total Promotion = SUM(PlayerFinance[Deposit Bonus]) + SUM(PlayerFinance[Other Bonus]) + SUM(PlayerFinance[Referral Bonus])

Withdrawal to Bet Ratio = DIVIDE(SUM('PlayerFinance'[Withdrawl Amt#]),SUM('PlayerFinance'[Valid Bets]))

current_month_withdrawal_frequency = CALCULATE(SUM(PlayerFinance[Withdrawl Count]),FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

current_month_deposit_frequency = CALCULATE(SUM(PlayerFinance[Deposit Count]),FILTER(PlayerFinance, MONTH(PlayerFinance[Exported Date]) = MONTH(TODAY())))

last_month_withdrawal_frequency = CALCULATE(SUM(PlayerFinance[Withdrawl Count]),   DATESBETWEEN(PlayerFinance[Exported Date], Date(YEAR(EDATE(TODAY(),-1)),MONTH(EDATE(TODAY(),-1)),1),     EOMONTH(TODAY(),-1)))

last_month_deposit_frequency = CALCULATE(SUM(PlayerFinance[Deposit Count]),    DATESBETWEEN(PlayerFinance[Exported Date], Date(YEAR(EDATE(TODAY(),-1)),MONTH(EDATE(TODAY(),-1)),1),     EOMONTH(TODAY(),-1)))

DaysAgo Label Toggle = IF(PActivity[DaysAgo]>0, "Less Active", "Today Active")

Deposit Frequency = IF(PActivity[Total Deposit Count] >= 100,"Most Frequent",
IF(AND(PActivity[Total Deposit Count] >= 21, PActivity[Total Deposit Count] <= 99),"Mid High Frequent",
IF(AND(PActivity[Total Deposit Count] >= 2, PActivity[Total Deposit Count] <= 20),"Mid Frequent",
IF(PActivity[Total Deposit Count] = 1, "1 Time Deposit", BLANK())
)))

Depositor Rank = IF(PActivity[Total Deposit] >= 300000,"Highest Depositors",
IF(AND(PActivity[Total Deposit] >= 100000, PActivity[Total Deposit] <= 299999),"Mid High Depositors",
IF(AND(PActivity[Total Deposit] >= 50000, PActivity[Total Deposit] <= 99999),"Mid Depositors",
IF(AND(PActivity[Total Deposit] >= 50, PActivity[Total Deposit] <= 49999), "Lowest Depositors", BLANK())
)))

Depositors Count = IF(PActivity[Total Deposit Count]>0, 1, 0)

Depositors Label = IF(PActivity[Total Deposit Count] > 0, "Depositors", "Non-Depositors")

Login Frequency = IF(AND((CALCULATE(SUM(PActivity[Active Login Frequency]),ALLEXCEPT(PActivity,PActivity[Player ID]))) >= 2, (CALCULATE(SUM(PActivity[Active Login Frequency]),ALLEXCEPT(PActivity,PActivity[Player ID]))) <= 20),"Mid Active",IF(AND((CALCULATE(SUM(PActivity[Active Login Frequency]),ALLEXCEPT(PActivity,PActivity[Player ID]))) >= 21, (CALCULATE(SUM(PActivity[Active Login Frequency]),ALLEXCEPT(PActivity,PActivity[Player ID]))) <= 99),"Mid High Active",IF(AND((CALCULATE(SUM(PActivity[Active Login Frequency]),ALLEXCEPT(PActivity,PActivity[Player ID]))) >= 0, (CALCULATE(SUM(PActivity[Active Login Frequency]),ALLEXCEPT(PActivity,PActivity[Player ID]))) <= 1),"Inactive",IF((CALCULATE(SUM(PActivity[Active Login Frequency]),ALLEXCEPT(PActivity,PActivity[Player ID]))) >= 100, "Most Active", BLANK()))))

Monetary = IF(PActivity[Win Amount] <= -5001,"Highest Revenue",
IF(AND(PActivity[Win Amount] <= -1501, PActivity[Win Amount] >= -5000),"Mid High Revenue",
IF(AND(PActivity[Win Amount] <= -1, PActivity[Win Amount] >= -1500),"Mid Revenue",
IF(PActivity[Win Amount] >= 0, "Lowest Revenue", BLANK())
)))

Recency = IF(AND(PActivity[DaysAgo] >= 0, PActivity[DaysAgo] <= 3),"Most Recent",
IF(AND(PActivity[DaysAgo] >= 4, PActivity[DaysAgo] <= 7),"Mid High Recent",
IF(AND(PActivity[DaysAgo] >= 8, PActivity[DaysAgo] <= 14),"Mid Recent",
IF(PActivity[DaysAgo] >=15, "Least Recent", BLANK()))))

Win Amount = PActivity[Total Withdrawal] + PActivity[Total Balance] - PActivity[Total Deposit]

Withdrawal Frequency = IF(PActivity[Total Withdrawal Count] >= 100,"Most Frequent",
IF(AND(PActivity[Total Withdrawal Count] >= 21, PActivity[Total Withdrawal Count] <= 99),"Mid High Frequent",
IF(AND(PActivity[Total Withdrawal Count] >= 2, PActivity[Total Withdrawal Count] <= 20),"Mid Frequent",
IF(PActivity[Total Withdrawal Count] = 1, "1 Time Withdrawal", BLANK())
)))

Withdrawal Rank = IF(PActivity[Total Withdrawal] >= 300000,"Highest Withdrawer",
IF(AND(PActivity[Total Withdrawal] >= 100000, PActivity[Total Withdrawal] <= 299999),"Mid High Withdrawer",IF(AND(PActivity[Total Withdrawal] >= 50000, PActivity[Total Withdrawal] <= 99999),"Mid Withdrawer", IF(AND(PActivity[Total Withdrawal] >= 50, PActivity[Total Withdrawal] <= 49999), "Lowest Withdrawer", BLANK()))))

//CALCULATED COLUMNS (CONT.)

Effective Depositors = IF(CALCULATE(SUM(PlayerFinance[Deposit Count]),ALLEXCEPT(PlayerFinance,PlayerFinance[Player ID]))>0,1,0)

Effective Withdrawers = IF(CALCULATE(SUM(PlayerFinance[Withdrawl Count]),ALLEXCEPT(PlayerFinance,PlayerFinance[Player ID]))>0,1,0)

Gross Company Revenue = - PlayerFinance[Win/Loss] - PlayerFinance[JP Win] - PlayerFinance[Rebate] - PlayerFinance[Other Bonus] - PlayerFinance[Referral Bonus] - PlayerFinance[Affliliate Commission] - PlayerFinance[Deposit Bonus] + PlayerFinance[Tip] 

//TABLE

RFM Table = SUMMARIZE (PActivity, PActivity[Player ID], "Recency Value", SUM(PActivity[DaysAgo]), "Frequency Value", SUM(PActivity[Total Deposit Count]), "Monetary Value", SUM(PActivity[Win Amount]))

Frequency Score = IF('RFM Table'[Frequency Value] >= 100, "1", IF(AND('RFM Table'[Frequency Value] >= 21, 'RFM Table'[Frequency Value] <= 99), "2", IF(AND('RFM Table'[Frequency Value] >= 2, 'RFM Table'[Frequency Value] <= 20), "3", IF('RFM Table'[Frequency Value] = 1, "4", "0"))))

Monetary Score = IF('RFM Table'[Monetary Value] <= -5001,"1", IF(AND('RFM Table'[Monetary Value] <= -1501, 'RFM Table'[Monetary Value] >= -5000),"2", IF(AND('RFM Table'[Monetary Value] <= -1, 'RFM Table'[Monetary Value] >= -1500),"3", IF('RFM Table'[Monetary Value] >= 0, "4", BLANK()))))

Recency Score = IF(AND('RFM Table'[Recency Value] >= 0, 'RFM Table'[Recency Value] <= 3),"1", IF(AND('RFM Table'[Recency Value] >= 4, 'RFM Table'[Recency Value] <= 7),"2", IF(AND('RFM Table'[Recency Value] >= 8, 'RFM Table'[Recency Value] <= 14),"3", IF('RFM Table'[Recency Value] >=15, "4", BLANK()))))

RFM Score = 'RFM Table'[Recency Score] & 'RFM Table'[Frequency Score] & 'RFM Table'[Monetary Score]

Segmentation = SWITCH(
  TRUE(),
  'RFM Table'[RFM Score] = "133", "Lvl01 Player",
  'RFM Table'[RFM Score] = "143", "Lvl02 Player",
  'RFM Table'[RFM Score] = "232", "Lvl03 Player",
  'RFM Table'[RFM Score] = "233", "Lvl03 Player",
  'RFM Table'[RFM Score] = "332", "Lvl04 Player",
  'RFM Table'[RFM Score] = "333", "Lvl04 Player",
  'RFM Table'[RFM Score] = "411", "Lvl05 Player",
  'RFM Table'[RFM Score] = "412", "Lvl05 Player",
  'RFM Table'[RFM Score] = "421", "Lvl05 Player",
  'RFM Table'[RFM Score] = "422", "Lvl05 Player")
